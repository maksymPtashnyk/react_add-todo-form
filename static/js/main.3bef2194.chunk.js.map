{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUserById","usersFromServer","find","todoListWithUser","userId","getNewTodoId","Math","max","App","useState","setTodos","titleInput","setTitleImput","errorTitleInput","setErrorTitleInput","userSelect","setUserSelect","errorUserSelect","setErrorUserSelect","action","method","onSubmit","event","preventDefault","filteredTitleInput","split","filter","char","join","getFilteredTitleInput","newTodo","prevTodos","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bef2194.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../interfaces/interfaces';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../interfaces/interfaces';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      key={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../interfaces/interfaces';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo, User } from './components/interfaces/interfaces';\n\nfunction getUserById(id: number) {\n  return usersFromServer.find(user => user.id === id) as User;\n}\n\nconst todoListWithUser = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nfunction getFilteredTitleInput(titleInput: string) {\n  return titleInput\n    .split('')\n    .filter((char: string | number) => (char >= 'a' && char <= 'z')\n      || (char >= 'A' && char <= 'Z')\n      || (char >= 'а' && char <= 'я')\n      || (char >= 'А' && char <= 'Я')\n      || (char >= '0' && char <= '9')\n      || char === ' ')\n    .join('');\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todoListWithUser);\n  const [titleInput, setTitleImput] = useState('');\n  const [errorTitleInput, setErrorTitleInput] = useState('');\n  const [userSelect, setUserSelect] = useState(0);\n  const [errorUserSelect, setErrorUserSelect] = useState('');\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    const filteredTitleInput = getFilteredTitleInput(titleInput);\n\n    const newTodo: Todo = {\n      id: getNewTodoId(todos),\n      title: filteredTitleInput,\n      completed: false,\n      userId: userSelect,\n      user: getUserById(userSelect),\n    };\n\n    if (!titleInput) {\n      setErrorTitleInput('Please enter a title');\n    }\n\n    if (!userSelect) {\n      setErrorUserSelect('Please choose a user');\n    }\n\n    if (!titleInput || !userSelect) {\n      return;\n    }\n\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n\n    setTitleImput('');\n    setUserSelect(0);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={titleInput}\n            placeholder=\"Enter a title\"\n            onChange={(event) => {\n              setTitleImput(event.target.value);\n              setErrorTitleInput('');\n            }}\n          />\n          {errorTitleInput && (\n            <span className=\"error\">{errorTitleInput}</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userSelect}\n            onChange={event => {\n              setUserSelect(+event.target.value);\n              setErrorUserSelect('');\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user?.name}\n              </option>\n            ))}\n          </select>\n          {errorUserSelect && (\n            <span className=\"error\">{errorUserSelect}</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}